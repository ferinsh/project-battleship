(()=>{"use strict";class i{constructor(i){if(i%5!=0)throw new Error("Length should be multiples of 5.");this.length=i,this.hits=0,this.sunk=!1}hit(){return this.hits+=5,this.isSunk(),this.isSunk()}isSunk(){return this.hits>=this.length&&(this.sunk=!0,!0)}}class s{constructor(){this.gridSize=100,this.grid=Array.from({length:this.gridSize},(()=>Array.from({length:this.gridSize},(()=>({isShip:!1,isHit:!1,ship:{}}))))),this.ships=[],this.missedAttacks=[]}placeShip(s,t,h,e){if(s.length>this.gridSize)throw new Error("Invalid Length");if(this.canPlaceShip(s,t,h,e)){const r=[];for(let i=0;i<s.length;i++){const o=e?t+i:t,n=e?h:h+i;this.grid[o][n].isShip=!0,this.grid[o][n].ship=s,r.push({x:o,y:n})}return this.ships.push({ship:new i(s.length),coordinates:r}),!0}return!1}canPlaceShip(i,s,t,h){if(h&&s+i.length>this.gridSize)return console.log("Can't place"),!1;if(!h&&t+i.length>this.gridSize)return console.log("Can't place"),!1;for(let e=0;e<i.length;e++){const i=h?s+e:s,r=h?t:t+e;if(this.grid[i][r].isShip)return console.log("Can't place"),!1}return!0}receiveAttack(i,s){return console.log("grid",this.grid[20]),this.grid[i+1][s].isHit?(console.log("Already hit"),!1):(this.grid[i][s].isHit=!0,console.log(this.grid[i][s]),this.grid[i][s].isShip?(console.log("coord",this.ships),this.ships.forEach((t=>{t.coordinates.forEach((h=>{h.x===i&&h.y===s&&t.ship.hit()}))})),this.grid[i][s].isShip=!1,console.log("grid",this.grid[20]),console.log(this.ships),!0):(this.missedAttacks.push({x:i,y:s}),console.log("missed attack"),console.log("grid",this.grid[20]),console.log(this.ships),!1))}allShipsSunk(){return this.ships.every((i=>i.ship.sunk))}}let t=new class{constructor(i,s=!1){this.name=i,this.isAI=s}playTurn(i,s){if(this.isAI){let t=i.ships,h=s.ships,e={x:20,y:30};console.log("AIships",t),console.log("AIenemyShips",h),console.log("AIattackCoord",e.x,e.y),s.receiveAttack(e.x,e.y)}}}("play",!0),h=new i(5),e=new s,r=new s;t.playTurn(e,r),e.placeShip(h,20,30,!0),r.placeShip(h,20,30,!0),r.placeShip(h,30,40,!0)})();